Assignment 8.4 (Python for Everbody)

#8.4 Open the file romeo.txt and read it line by line. For each line, split the line into a list of words using the split() method. The program should build a list of words. For each word on each line check to see if the word is already in the list and if not append it to the list. When the program completes, sort and print the resulting words in alphabetical order.


#use input function to give file name
inp=input('Give file name')
openf=open(inp)
readf=openf.read()
lit=list()
fsplit=readf.split()
for word in fsplit:
    if word not in lit:
        lit.append(word)
print(sorted(lit))


Assignemnt (8.5)
Q- Open the file mbox-short.txt and read it line by line. When you find a line that starts with 'From ' like the following line:
From stephen.marquard@uct.ac.za Sat Jan  5 09:14:16 2008
You will parse the From line using split() and print out the second word in the line (i.e. the entire address of the person who sent the message). Then print out a count at the end.
Hint: make sure not to include the lines that start with 'From:'. Also look at the last line of the sample output to see how to print the count.

Solved-
inp=input('Give file name: ')
openf=open(inp)
count=0
for line in openf:
    if line.startswith('From '):
        line = line.split()
        count=count+1
        print(line[1])
print("There were", count, "lines in the file with From as the first word")


Assignemnt 9.4
 Write a program to read through the mbox-short.txt and figure out who has sent the greatest number of mail messages. The program looks for 'From ' lines and takes the second word of those lines as the person who sent the mail. The program creates a Python dictionary that maps the sender's mail address to a count of the number of times they appear in the file. After the dictionary is produced, the program reads through the dictionary using a maximum loop to find the most prolific committer.
 
 Code:-
 
 inp=input('Give file name: ')
file=open(inp)
count=dict()
for line in file:
    if line.startswith('From '):
        ls=line.split()
        linei=ls[1]
        #print(linei)
        count[linei]=count.get(linei,0)+1
        #print(count)
bigvalue=None
bigkey=None
for word,value in count.items():
    if bigvalue is None or value >bigvalue:
        bigvalue=value
        bigkey=word
print(bigkey,bigvalue)


